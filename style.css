*,
*:before,
*:after {
  box-sizing: border-box;
  position: relative;
}

html,
body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  background-color: #faf0e9;
  font-size: 16px;
}

body {
  display: grid;
  place-items: center;
}

small {
  color: #aaa;
  margin-bottom: 0.5rem;
  text-transform: uppercase;
  font-size: 75%;
  display: inline-block;
}

h1 {
  font-size: 1.5rem;
  margin: 0;
}

/* ---------------------------------- */
#app {
  max-width: 25rem;
  display: grid;
  align-items: start;
  grid-gap: 1rem;
  background-color: #fff;
  padding: 2rem;
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  border-radius: 1rem;
  height: 90vh;
  overflow-y: scroll;
}
img {
  max-width: 100%;
}

/* ---------------------------------- */
[data-flip] {
  transition-property: transform;
  transform-origin: top left;
}
[data-flip][data-flipping] {
  transition: none;
  transform: var(--flip-translate);
  --flip-translate: translate(calc(-1px * var(--dx)), calc(-1px * var(--dy)));
  --flip-scale: scale(calc(1 / var(--dw)), calc(1 / var(--dh)));
}

p {
  line-height: 1.6;
  font-size: 85%;
}

.card {
  --easing: ease-in-out;
  --duration: 0.5s;
  padding: 2rem;
  border-radius: var(--radius);
  display: flex;
  flex-direction: column;
  gap: 1rem;
  transition-property: transform, opacity, z-index, -webkit-clip-path;
  transition-property: transform, clip-path, opacity, z-index;
  transition-property: transform, clip-path, opacity, z-index, -webkit-clip-path;
  --radius: 1rem;
  --display-content: none;
}
.card,
.card * {
  transition-delay: var(--delay);
  transition-duration: var(--duration);
  transition-timing-function: var(--easing);
}
.card > .bg {
  background: var(--background, #fff);
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  position: absolute;
  border-radius: var(--radius);
  transition-property: transform, border-radius;
  transform-origin: top left;
  box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.1);
}
.card[data-flipping] > .bg {
  transition: none;
  transform: scale(calc(1 / var(--dw)), calc(1 / var(--dh)));
  border-radius: calc((var(--dw)) * var(--radius))/calc((var(--dh)) * var(--radius));
}
.card.orange {
  --background: #f2a25a;
  color: white;
}
.card.green {
  --background: #5a925a;
  color: white;
}

.card[data-state=expanded] {
  --display-content: block;
}
.card[data-state=expanded][data-flipping] {
  --display-content: none;
}
.card[data-state=expanded] {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
  padding: 2rem;
  -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
          clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
}
.card[data-state=expanded][data-flipping] {
  -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% calc((1 / var(--dh)) * 100%), 0% calc((1 / var(--dh)) * 100%));
          clip-path: polygon(0% 0%, 100% 0%, 100% calc((1 / var(--dh)) * 100%), 0% calc((1 / var(--dh)) * 100%));
}
.card p {
  margin: 0 0 1rem;
  display: var(--display-content, block);
}

.card-header h1 {
  margin: 0;
  font-size: 1.5rem;
}

.card-figure {
  margin: 0;
  --scale: 1;
  transform: scale(var(--scale));
  transform-origin: center center;
}
.card[data-state=collapsed] .card-figure {
  --scale: 0.8;
}
.card[data-flipping] .card-figure {
  transition: none;
  transform: scale(var(--scale, 1)) translate(-50%, -50%) scale(calc(1 / var(--dw)), calc(1 / var(--dh))) translate(50%, 50%);
}